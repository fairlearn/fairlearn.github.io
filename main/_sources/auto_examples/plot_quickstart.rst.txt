
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_quickstart.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_quickstart.py>`
        to download the full example code. or to run this example in your browser via JupyterLite

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_quickstart.py:


==========================
MetricFrame visualizations
==========================

.. GENERATED FROM PYTHON SOURCE LINES 9-19

.. code-block:: Python


    from functools import partial

    import pandas as pd
    from sklearn.metrics import accuracy_score, precision_score
    from sklearn.model_selection import train_test_split
    from sklearn.tree import DecisionTreeClassifier

    from fairlearn.datasets import fetch_diabetes_hospital








.. GENERATED FROM PYTHON SOURCE LINES 20-110

.. code-block:: Python

    from fairlearn.metrics import (
        MetricFrame,
        count,
        false_negative_rate,
        false_positive_rate,
        selection_rate,
    )

    data = fetch_diabetes_hospital(as_frame=True)
    X = data.data.copy()
    X.drop(columns=["readmitted", "readmit_binary"], inplace=True)
    y_true = data.target
    X_ohe = pd.get_dummies(X)
    race = X["race"]

    X_train, X_test, y_train, y_test, A_train, A_test = train_test_split(
        X_ohe, y_true, race, random_state=123
    )

    classifier = DecisionTreeClassifier(min_samples_leaf=10, max_depth=4)
    classifier.fit(X_train, y_train)
    y_pred = classifier.predict(X_test)

    zero_div_precision_score = partial(precision_score, zero_division=0)

    # Analyze metrics using MetricFrame
    metrics = {
        "accuracy": accuracy_score,
        "precision": zero_div_precision_score,
        "false positive rate": false_positive_rate,
        "false negative rate": false_negative_rate,
        "selection rate": selection_rate,
        "count": count,
    }
    metric_frame = MetricFrame(
        metrics=metrics, y_true=y_test, y_pred=y_pred, sensitive_features=A_test
    )
    metric_frame.by_group.plot.bar(
        subplots=True,
        layout=[3, 3],
        legend=False,
        figsize=[12, 8],
        title="Show all metrics",
    )

    # Customize plots with ylim
    metric_frame.by_group.plot(
        kind="bar",
        ylim=[0, 1],
        subplots=True,
        layout=[3, 3],
        legend=False,
        figsize=[12, 8],
        title="Show all metrics with assigned y-axis range",
    )

    # Customize plots with colormap
    metric_frame.by_group.plot(
        kind="bar",
        subplots=True,
        layout=[3, 3],
        legend=False,
        figsize=[12, 8],
        colormap="Accent",
        title="Show all metrics in Accent colormap",
    )

    # Customize plots with kind (note that we are only plotting the "count" metric here because we are showing a pie chart)
    metric_frame.by_group[["count"]].plot(
        kind="pie",
        subplots=True,
        layout=[1, 1],
        legend=False,
        figsize=[12, 8],
        title="Show count metric in pie chart",
    )

    # Saving plots
    fig = metric_frame.by_group[["count"]].plot(
        kind="pie",
        subplots=True,
        layout=[1, 1],
        legend=False,
        figsize=[12, 8],
        title="Show count metric in pie chart",
    )

    # Don't save file during doc build
    if "__file__" in locals():
        fig[0][0].figure.savefig("filename.png")



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_quickstart_001.png
         :alt: Show all metrics, accuracy, precision, false positive rate, false negative rate, selection rate, count
         :srcset: /auto_examples/images/sphx_glr_plot_quickstart_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_quickstart_002.png
         :alt: Show all metrics with assigned y-axis range, accuracy, precision, false positive rate, false negative rate, selection rate, count
         :srcset: /auto_examples/images/sphx_glr_plot_quickstart_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_quickstart_003.png
         :alt: Show all metrics in Accent colormap, accuracy, precision, false positive rate, false negative rate, selection rate, count
         :srcset: /auto_examples/images/sphx_glr_plot_quickstart_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_quickstart_004.png
         :alt: Show count metric in pie chart
         :srcset: /auto_examples/images/sphx_glr_plot_quickstart_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_quickstart_005.png
         :alt: Show count metric in pie chart
         :srcset: /auto_examples/images/sphx_glr_plot_quickstart_005.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 5.991 seconds)

**Estimated memory usage:**  173 MB


.. _sphx_glr_download_auto_examples_plot_quickstart.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../lite/lab/index.html?path=auto_examples/plot_quickstart.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_quickstart.ipynb <plot_quickstart.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_quickstart.py <plot_quickstart.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_quickstart.zip <plot_quickstart.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
